package com.globallogic.procamp.lesson12.latency;

import java.sql.ResultSet;
import java.sql.SQLException;


public interface ExecutionAware {
    ResultSet executeQuery() throws SQLException;

    int executeUpdate() throws SQLException;

    boolean execute(String sql, String[] columnNames) throws SQLException;

    boolean execute(String sql, int[] columnIndexes) throws SQLException;

    boolean execute(String sql, int autoGeneratedKeys) throws SQLException;

    int executeUpdate(String sql, String[] columnNames) throws SQLException;

    int executeUpdate(String sql, int[] columnIndexes) throws SQLException;

    int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException;

    int[] executeBatch() throws SQLException;

    boolean execute(String sql) throws SQLException;

    boolean execute() throws SQLException;

    int executeUpdate(String sql) throws SQLException;

    ResultSet executeQuery(String sql) throws SQLException;

    // due-to @Delegate generic limitation

    boolean isWrapperFor(Class<?> iface) throws SQLException;

    <T> T unwrap(Class<T> iface) throws SQLException;
}
